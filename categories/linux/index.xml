<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Beom&#39;s Doodle</title>
    <link>https://duaibeom.github.io/categories/linux/</link>
    <description>Recent content in linux on Beom&#39;s Doodle</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 29 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://duaibeom.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IPMI</title>
      <link>https://duaibeom.github.io/posts/ipmitool/</link>
      <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/ipmitool/</guid>
      <description>IPMITOOL IPMI interface  https://serverfault.com/a/362019  Dedicated: Always use the dedicated IPMI interface. This is the option you want if you&amp;rsquo;re trying to have the simplest setup, at the expense of additional cabling.
Shared: Always use the LAN1 interface. This is the option you want if you&amp;rsquo;re trying to reduce your cabling to each server, and understand the tradeoffs. Under the covers, there&amp;rsquo;s a virtual switch in hardware that&amp;rsquo;s splitting out traffic to the IPMI card from traffic to the rest of the system; the IPMI card has a separate MAC address to differentiate the traffic.</description>
    </item>
    
    <item>
      <title>SSH</title>
      <link>https://duaibeom.github.io/posts/ssh/</link>
      <pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/ssh/</guid>
      <description>ssh ssh-keygen -p -f ~/.ssh/id_rsa passphrase를 변경할 수 있다. ssh-copy-id &amp;lt;someonePC&amp;gt;는 ~/.ssh/id_rsa.pub가 &amp;lt;someonePC&amp;gt;:~/.ssh/authorized_keys에 추가가 된다.
Github check ssh -T git@github.com -i ~/.ssh/&amp;lt;your_id_rsa&amp;gt;
위 방법을 통해 어느 PubKey가 어느 계정에 사용되는지 확인이 가능하다.
ssh forwarding config Host SomeonePC Hostname 192.168.0.999 IdentityFile ~/.ssh/id_rsa IdentitiesOnly yes User $USER Host github-1st_ID Hostname github.com IdentityFile ~/.ssh/$1st_PUBKEY IdentitiesOnly yes User git Host github-2nd_ID Hostname github.com IdentityFile ~/.ssh/$2nd_PUBKEY IdentitiesOnly yes User git </description>
    </item>
    
    <item>
      <title>Git 사용법</title>
      <link>https://duaibeom.github.io/posts/git/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/git/</guid>
      <description>Git Manual Git은 3가지 요소로 구성이 되어 있다.
 작업 트리(working tree or working directory) - Directory 자체를 의미한다. 스테이지(stage) - git 상에 추가된 파일들을 의미한다. (.git/index) 저장소(repository) - commit 되어 버전으로 남은 것들을 의미한다. (.git/HEAD)  git commit --amend: 방금 commit한 메세지 수정이 필요할때
git status: 현재의 상태
git log [--oneline] [--branches] [--graph]: 저장소 log
git diff:
git checkout -- &amp;lt;paths&amp;gt;: 작업 트리에서 수정한 파일 되돌리기
git reset &amp;lt;tree-ish&amp;gt; &amp;lt;paths&amp;gt;: 기존 commit을 제거하고 돌아감.</description>
    </item>
    
    <item>
      <title>저장용 논문</title>
      <link>https://duaibeom.github.io/posts/paper/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/paper/</guid>
      <description>Nature&amp;rsquo;s papers   Predicting drug–protein interaction using quasi-visual question answering system, Nat Mach Intell 2, 134–140 (2020)
  Aqueous pKa prediction for tautomerizable compounds using equilibrium bond lengths, Commun Chem 3, 21 (2020).
  </description>
    </item>
    
    <item>
      <title>SLURM</title>
      <link>https://duaibeom.github.io/posts/slurm_manual/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/slurm_manual/</guid>
      <description>salloc -p pgpu --gres=gpu:1 --time=1:00:00 srun --pty /bin/bash --login
array jobs #SBATCH -J ARRAY_JOB #SBATCH --cpus-per-task=4 # job 당 core 개수 #SBATCH --array=0-4%2 # % 의미는 다음 array에서 2개씩만 계산을 이용하겠다는 의미이다. LS_=(`ls *.job`) srun g16 ${LS_[$SLURM_ARRAY_TASK_ID]} Install slurmtop in Ubuntu sudo apt install libslurm34 libswitch-perl libcurses-perl libslurm-perl tar xzf schedtop-5.02.tar.gz cd schedtop perl Makefile.PL slurmtop make sudo make install </description>
    </item>
    
    <item>
      <title>VIM 사용법</title>
      <link>https://duaibeom.github.io/posts/vim_manual/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/vim_manual/</guid>
      <description>Vim Manual ^]: jump to the function definition ^[: same ESC
cw
c</description>
    </item>
    
    <item>
      <title>원격 부팅 (Wake On LAN)</title>
      <link>https://duaibeom.github.io/posts/wake_on_lan/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/wake_on_lan/</guid>
      <description>원격 부팅 (Wake On LAN) 개인 PC 원격 부팅 원격 접속을 하기 위해서는 다음 4가지가 필요하다.
 Host 컴퓨터에 WOL 설정이 되어 있어야 한다. https://www.techrepublic.com/article/how-to-enable-wake-on-lan-in-ubuntu-server-18-04/ Host 컴퓨터 메인보드에 해당 기능을 가능하게 해야한다. https://www.howtogeek.com/70374/how-to-geek-explains-what-is-wake-on-lan-and-how-do-i-enable-it/ Router(공유기)에 해당 컴퓨터를 공유기 WOL 기능에 추가한다. https://m.blog.naver.com/junho306/221397846945 App 혹은 공유기 주소 설정이 되어 있어야 한다.  서버 원격 부팅 우리 연구실 서버는 WOL을 사용할 필요가 없다. IPMI 기능이 있기 때문에 이것을 이용하면 된다.
 IPMI로 접속한다. via ssh; (자세한 사항은 구두를 통해 전달을 받으세요.</description>
    </item>
    
  </channel>
</rss>
