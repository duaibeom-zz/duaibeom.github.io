<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Beom&#39;s Doodle</title>
    <link>https://duaibeom.github.io/posts/</link>
    <description>Recent content in Posts on Beom&#39;s Doodle</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 16 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://duaibeom.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GRUB</title>
      <link>https://duaibeom.github.io/posts/grub/</link>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/grub/</guid>
      <description>grub의 기본 설정 /etc/default/grub Grub 설정은 여기에서 하면 된다.
# /etc/default/grub GRUB_DEFAULT=0 # grub 메뉴에서 0번째에 해당하는 것을 기본으로한다. GRUB_TIMEOUT_STYLE=menu # hidden:메뉴가 출력되지 않는다. menu:메뉴가 출력된다. GRUB_TIMEOUT=10 # grub이 출력되는 시간을 정한다. 해당 시간동안 입력이 없으면 grub_default를 이용한다. GRUB_DISTRIBUTOR=`lsb_release -i -s 2&amp;gt; /dev/null || echo Debian` GRUB_CMDLINE_LINUX_DEFAULT=&amp;#34;quiet splash&amp;#34; GRUB_CMDLINE_LINUX=&amp;#34;&amp;#34; GRUB_GFXMODE=1280x720 # 기본 해상도가 너무 높아 버벅 거린다면 해상도를 낮추는 것이 좋다. 설정 후 반드시 sudo update-grub 을 통해 적용을 해야한다.</description>
    </item>
    
    <item>
      <title>RDKit Installation</title>
      <link>https://duaibeom.github.io/posts/rdkit/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/rdkit/</guid>
      <description>Conda 를 이용한 rdkit 설치. RDKIT을 콘다를 이용하지 않고, 설치하는 방법은 매우 어렵다. (lib 문제로 설치가 어렵다.)
마음 편하게 anaconda3를 이용해 설치를 하자.
Anaconda3 설치 방법 CentOS 7.7 에서 진행했다.
bash Anaconda3-2019.10-Linux-x86_64.sh로 설치를 시작한다.
conda init을 하지 않으면 venv 생성이 어렵다. 해주는 것이 좋다.
 문제는 하게 되면 기본으로 anaconda3 환경을 사용하게 된다.이것이 싫다면 conda config --set auto_activate_base false 해주자.
 conda create -n rdkit_venv python=3.7을 이용해 rdkit 설치를 위한 가상환경을 만든다.</description>
    </item>
    
    <item>
      <title>Modulefiles</title>
      <link>https://duaibeom.github.io/posts/modulefiles/</link>
      <pubDate>Sat, 30 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/modulefiles/</guid>
      <description>Modulefiles The Modules package is a tool that simplifies shell initialization and lets users easily modify their environment during a session using modulefiles.
 github docs  Installing Modules on Unix sudo apt install tcl8.6-dev # 8.5 &amp;gt;= version ./configure --prefix=/usr/share/Modules \  --modulefilesdir=/etc/modulefiles make make install ln -s PREFIX/init/profile.sh /etc/profile.d/modules.sh ln -s PREFIX/init/profile.csh /etc/profile.d/modules.csh Example of modulefiles Anaconda3 python
#%Module1.0##################################################################### ## ## modules modulefile ## proc ModulesHelp { } { global version prefix puts stderr &amp;#34;\tmodules - loads the modules software &amp;amp; application environment&amp;#34; puts stderr &amp;#34;\n\tThis adds $prefix/* to several of the&amp;#34; puts stderr &amp;#34;\tenvironment variables.</description>
    </item>
    
    <item>
      <title>IPMI</title>
      <link>https://duaibeom.github.io/posts/ipmitool/</link>
      <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/ipmitool/</guid>
      <description>IPMITOOL IPMI interface  https://serverfault.com/a/362019  Dedicated: Always use the dedicated IPMI interface. This is the option you want if you&amp;rsquo;re trying to have the simplest setup, at the expense of additional cabling.
Shared: Always use the LAN1 interface. This is the option you want if you&amp;rsquo;re trying to reduce your cabling to each server, and understand the tradeoffs. Under the covers, there&amp;rsquo;s a virtual switch in hardware that&amp;rsquo;s splitting out traffic to the IPMI card from traffic to the rest of the system; the IPMI card has a separate MAC address to differentiate the traffic.</description>
    </item>
    
    <item>
      <title>Flutter</title>
      <link>https://duaibeom.github.io/posts/flutter/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/flutter/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pytorch</title>
      <link>https://duaibeom.github.io/posts/pytorch/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/pytorch/</guid>
      <description>PYTORCH  cat and stack  &amp;gt;&amp;gt;&amp;gt; a = torch.randn([2, 3]) tensor([[ 0.0115, 0.9966, -0.6768], [ 2.2879, 0.6915, 0.4793]]) &amp;gt;&amp;gt;&amp;gt; b = torch.randn([2, 3]) tensor([[ 1.4057, 0.8495, -0.4715], [-0.2320, 1.9549, 0.8351]]) &amp;gt;&amp;gt;&amp;gt; torch.cat([a, b]) tensor([[ 0.0115, 0.9966, -0.6768], [ 2.2879, 0.6915, 0.4793], [ 1.4057, 0.8495, -0.4715], [-0.2320, 1.9549, 0.8351]]) # shape: torch.Size([4, 3]) &amp;gt;&amp;gt;&amp;gt; torch.stack([a, b]) tensor([[[ 0.0115, 0.9966, -0.6768], [ 2.2879, 0.6915, 0.4793]], [[ 1.4057, 0.8495, -0.4715], [-0.2320, 1.9549, 0.</description>
    </item>
    
    <item>
      <title>VS Code</title>
      <link>https://duaibeom.github.io/posts/vscode/</link>
      <pubDate>Tue, 20 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/vscode/</guid>
      <description>VS Code option { &amp;#34;editor.suggestSelection&amp;#34;: &amp;#34;first&amp;#34;, &amp;#34;vsintellicode.modify.editor.suggestSelection&amp;#34;: &amp;#34;automaticallyOverrodeDefaultValue&amp;#34;, &amp;#34;python.languageServer&amp;#34;: &amp;#34;Pylance&amp;#34;, &amp;#34;git.ignoreLegacyWarning&amp;#34;: true, &amp;#34;python.linting.enabled&amp;#34;: true, &amp;#34;python.linting.flake8Enabled&amp;#34;: true, &amp;#34;python.linting.flake8Args&amp;#34;: [ &amp;#34;--ignore=E203&amp;#34;, // 천천히 확인 // &amp;#34;--ignore=E266&amp;#34;, &amp;#34;--ignore=E501&amp;#34;, &amp;#34;--ignore=W503&amp;#34;, // &amp;#34;--max-line-length=80&amp;#34;, // &amp;#34;--select = B,C,E,F,W,T4,B9&amp;#34;, &amp;#34;--select = B,C,E,F,W,B950&amp;#34;, &amp;#34;--max-complexity = 18&amp;#34; ], &amp;#34;editor.formatOnSave&amp;#34;: true, &amp;#34;python.formatting.provider&amp;#34;: &amp;#34;yapf&amp;#34;, &amp;#34;workbench.colorTheme&amp;#34;: &amp;#34;GitHub Dark&amp;#34;, &amp;#34;python.pythonPath&amp;#34;: &amp;#34;&amp;lt;Python-ENV&amp;gt;/bin/python&amp;#34; } </description>
    </item>
    
    <item>
      <title>NUMPY note</title>
      <link>https://duaibeom.github.io/posts/numpy/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/numpy/</guid>
      <description>NUMPY np 자리수 조절 print(U) &amp;gt; [ 3.40948761e-01 0.00000000e+00 -1.20516241e-01 -3.88578059e-16 -9.32324946e-01 -1.11022302e-16 -2.42574685e-17] np.set_printoptions(precision=2) # global with np.printoptions(precision=2, suppress=True): # local print(U) &amp;gt; [ 0.34 0. -0.12 -0. -0.93 -0. -0. ] &amp;#39;suppress&amp;#39; about scientific notation &amp;gt; If True, always print floating point numbers using fixed point notation U[U &amp;lt; 0] = 0 &amp;gt; [0.34 0. 0. 0. 0. 0. 0. ] FILE total line number check q = &amp;#39;wc smiles_100000.</description>
    </item>
    
    <item>
      <title>SSH</title>
      <link>https://duaibeom.github.io/posts/ssh/</link>
      <pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/ssh/</guid>
      <description>ssh ssh-keygen -p -f ~/.ssh/id_rsa passphrase를 변경할 수 있다. ssh-copy-id &amp;lt;someonePC&amp;gt;는 ~/.ssh/id_rsa.pub가 &amp;lt;someonePC&amp;gt;:~/.ssh/authorized_keys에 추가가 된다.
Github check ssh -T git@github.com -i ~/.ssh/&amp;lt;your_id_rsa&amp;gt;
위 방법을 통해 어느 PubKey가 어느 계정에 사용되는지 확인이 가능하다.
ssh forwarding config Host SomeonePC Hostname 192.168.0.999 IdentityFile ~/.ssh/id_rsa IdentitiesOnly yes User $USER Host github-1st_ID Hostname github.com IdentityFile ~/.ssh/$1st_PUBKEY IdentitiesOnly yes User git Host github-2nd_ID Hostname github.com IdentityFile ~/.ssh/$2nd_PUBKEY IdentitiesOnly yes User git </description>
    </item>
    
    <item>
      <title>Fingerprint (Chemistry)</title>
      <link>https://duaibeom.github.io/posts/fingerprint/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/fingerprint/</guid>
      <description>Extended Connectivity Fingerprint (ECFP) family https://docs.chemaxon.com/display/docs/Extended+Connectivity+Fingerprint+ECFP
https://www.rdkit.org/docs/GettingStartedInPython.html#morgan-fingerprints-circular-fingerprints
Morgan fingerprint(Circular Fingerprints): Fingerprints based on the Morgan algorithm, similar to the ECFP/FCFP fingerprints; J. Chem. Inf. and Model. 50:742-54 (2010).</description>
    </item>
    
    <item>
      <title>Git 사용법</title>
      <link>https://duaibeom.github.io/posts/git/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/git/</guid>
      <description>Git Manual Git은 3가지 요소로 구성이 되어 있다.
 작업 트리(working tree or working directory) - Directory 자체를 의미한다. 스테이지(stage) - git 상에 추가된 파일들을 의미한다. (.git/index) 저장소(repository) - commit 되어 버전으로 남은 것들을 의미한다. (.git/HEAD)  git commit --amend: 방금 commit한 메세지 수정이 필요할때
git status: 현재의 상태
git log [--oneline] [--branches] [--graph]: 저장소 log
git diff:
git checkout -- &amp;lt;paths&amp;gt;: 작업 트리에서 수정한 파일 되돌리기
git reset &amp;lt;tree-ish&amp;gt; &amp;lt;paths&amp;gt;: 기존 commit을 제거하고 돌아감.</description>
    </item>
    
    <item>
      <title>Utils</title>
      <link>https://duaibeom.github.io/posts/utils/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/utils/</guid>
      <description>time module perf_counter() and process_time() - https://stackoverflow.com/q/25785243/10103236</description>
    </item>
    
    <item>
      <title>Jupyter Notebook</title>
      <link>https://duaibeom.github.io/posts/jupyter_notebook/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/jupyter_notebook/</guid>
      <description>Jupyter notebook Sever  via ssh via config  via config   config 파일 생성 jupyter notebook --generate-config
  password 설정
  jupyter notebook password Enter password: **** Verify password: **** [NotebookPasswordApp] Wrote hashed password to /Users/you/.jupyter/jupyter_notebook_config.json jupyter_notebook_config.json에 있는 hash password 를 /Users/you/.jupyter/jupyter_notebook_config.py에 넣기.
 c.NotebookApp.password = u&#39;sha1: ~ &#39;
  config 파일 설정  c.NotebookApp.allow_origin = &#39;192.168.0.0&#39; 접속가능한 IP 설정.
c.NotebookApp.ip = &#39;192.168.0.???&#39; 해당 노드의 IP 입력.</description>
    </item>
    
    <item>
      <title>Hugo 블로그 생성 w/GitHub</title>
      <link>https://duaibeom.github.io/posts/mk_hugo/</link>
      <pubDate>Wed, 18 Mar 2020 11:30:39 +0900</pubDate>
      
      <guid>https://duaibeom.github.io/posts/mk_hugo/</guid>
      <description>HUGO 블로그 생성  Hugo is a fast and modern static site generator written in Go, and designed to make website creation fun again.
 Hugo 설치  MacOS - brew install hugo Ubuntu - snap install hugo  주의 - apt로 설치하면 구버전이 설치된다. snap을 이용하면 최신 버전으로 다운이 가능하다.   Window - ?  자세한 정보는 Hugo Docs의 Install Hugo 참조.
Hugo로 블로그 생성 hugo version 을 통해 작동이 가능한지 확인한다.</description>
    </item>
    
    <item>
      <title>저장용 논문</title>
      <link>https://duaibeom.github.io/posts/paper/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/paper/</guid>
      <description>Nature&amp;rsquo;s papers   Predicting drug–protein interaction using quasi-visual question answering system, Nat Mach Intell 2, 134–140 (2020)
  Aqueous pKa prediction for tautomerizable compounds using equilibrium bond lengths, Commun Chem 3, 21 (2020).
  </description>
    </item>
    
    <item>
      <title>SLURM</title>
      <link>https://duaibeom.github.io/posts/slurm_manual/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/slurm_manual/</guid>
      <description>salloc -p pgpu --gres=gpu:1 --time=1:00:00 srun --pty /bin/bash --login
array jobs #SBATCH -J ARRAY_JOB #SBATCH --cpus-per-task=4 # job 당 core 개수 #SBATCH --array=0-4%2 # % 의미는 다음 array에서 2개씩만 계산을 이용하겠다는 의미이다. LS_=(`ls *.job`) srun g16 ${LS_[$SLURM_ARRAY_TASK_ID]} Install slurmtop in Ubuntu sudo apt install libslurm34 libswitch-perl libcurses-perl libslurm-perl tar xzf schedtop-5.02.tar.gz cd schedtop perl Makefile.PL slurmtop make sudo make install </description>
    </item>
    
    <item>
      <title>VIM 사용법</title>
      <link>https://duaibeom.github.io/posts/vim_manual/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/vim_manual/</guid>
      <description>Vim Manual ^]: jump to the function definition ^[: same ESC
cw
c</description>
    </item>
    
    <item>
      <title>원격 부팅 (Wake On LAN)</title>
      <link>https://duaibeom.github.io/posts/wake_on_lan/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/wake_on_lan/</guid>
      <description>원격 부팅 (Wake On LAN) 개인 PC 원격 부팅 원격 접속을 하기 위해서는 다음 4가지가 필요하다.
 Host 컴퓨터에 WOL 설정이 되어 있어야 한다. https://www.techrepublic.com/article/how-to-enable-wake-on-lan-in-ubuntu-server-18-04/ Host 컴퓨터 메인보드에 해당 기능을 가능하게 해야한다. https://www.howtogeek.com/70374/how-to-geek-explains-what-is-wake-on-lan-and-how-do-i-enable-it/ Router(공유기)에 해당 컴퓨터를 공유기 WOL 기능에 추가한다. https://m.blog.naver.com/junho306/221397846945 App 혹은 공유기 주소 설정이 되어 있어야 한다.  서버 원격 부팅 우리 연구실 서버는 WOL을 사용할 필요가 없다. IPMI 기능이 있기 때문에 이것을 이용하면 된다.
 IPMI로 접속한다. via ssh; (자세한 사항은 구두를 통해 전달을 받으세요.</description>
    </item>
    
    <item>
      <title>pytesseract</title>
      <link>https://duaibeom.github.io/posts/pytesseract/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/pytesseract/</guid>
      <description>Project description Python-tesseract is an optical character recognition (OCR) tool for python. That is, it will recognize and “read” the text embedded in images.
Python-tesseract is a wrapper for Google’s Tesseract-OCR Engine. It is also useful as a stand-alone invocation script to tesseract, as it can read all image types supported by the Pillow and Leptonica imaging libraries, including jpeg, png, gif, bmp, tiff, and others. Additionally, if used as a script, Python-tesseract will print the recognized text instead of writing it to a file.</description>
    </item>
    
    <item>
      <title>Machine Learning Lecture</title>
      <link>https://duaibeom.github.io/posts/mllecture/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/mllecture/</guid>
      <description>CSEP 546 - Machine Learning - Autumn 2019 @Geoff Hulten PEDRO DOMINGOS
Site &amp;amp; Note
Tom Mitchell
Video
CS230 - CS230: Deep Learning | Autumn 2018 Site &amp;amp; NoteVideo</description>
    </item>
    
    <item>
      <title>Pillow (PIL Fork)</title>
      <link>https://duaibeom.github.io/posts/pillow/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/pillow/</guid>
      <description>gg</description>
    </item>
    
    <item>
      <title>Plot</title>
      <link>https://duaibeom.github.io/posts/plot/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/plot/</guid>
      <description>Matplotlib 사용법 저장 Cheatsheets
How-to
rcParams
 matplotlib.pyplot의 hist나 seaborn의 kdeplot의 Density가 1을 넘어 나올 경우에는 Plot의 문제 보다는 data(numpy data?)가 plot package로 넘어갈 때 스케일 때문에 문제가 발생하는 것 같다. 이를 확인하기 위해 numpy.histogram을 확인하면 된다.  counts, bins = np.histogram(data, bins=100, range=(0, 1), density=True) np.sum(counts) &amp;gt;&amp;gt; 100.0 plt.plot([i*0.01 for i in range(0, 100)], counts*0.01)) np.diff()? density? or probability density? Histograms and Density Plots in Python  https://towardsdatascience.com/histograms-and-density-plots-in-python-f6bda88f5ac0  Can a probability distribution value exceeding 1 be OK?</description>
    </item>
    
    <item>
      <title>정규화 표현식(Regular Expression)</title>
      <link>https://duaibeom.github.io/posts/regexp/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/regexp/</guid>
      <description>wikipedia_kr
반복 관련 메타 문자 * 0회
+ 1회
? 0 또는 1회
{m(, n)} m회부터 n회까지
반복 관련 메타 문자 . 문자
^ 처음
$ 끝
[] 문자 클래스
() 하위 식 &amp;ldquo;abc¦adc&amp;rdquo; == &amp;ldquo;a(b¦d)c&amp;rdquo;
| 선택</description>
    </item>
    
    <item>
      <title>MariaDB</title>
      <link>https://duaibeom.github.io/posts/mariadb/</link>
      <pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/mariadb/</guid>
      <description>MariaDB 사용법 설치법 (Installation) link  Ubuntu-18.04-LTS  sudo apt-get install software-properties-common sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8 sudo add-apt-repository &amp;#39;deb [arch=amd64,arm64,ppc64el] http://espejito.fder.edu.uy/mariadb/repo/10.4/ubuntu bionic main&amp;#39; sudo apt update sudo apt install mariadb-server  CentOS 7  /etc/yum.repos.d/MariaDB.repo:
# MariaDB 10.4 CentOS repository list - created 2019-12-24 11:00 UTC # http://downloads.mariadb.org/mariadb/repositories/ [mariadb] name = MariaDB baseurl = http://yum.mariadb.org/10.4/centos7-amd64 gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB gpgcheck=1 sudo yum install MariaDB-server MariaDB-client 초기 설정 (Post-installation) link CHECK: mysqladmin --version</description>
    </item>
    
    <item>
      <title>Tmux 사용법</title>
      <link>https://duaibeom.github.io/posts/how_to_tmux/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/how_to_tmux/</guid>
      <description>Tmux 사용법 새로운 세션 생성: tmux new (-s session_name)
세션 종료: exit
세션 목록: tmux ls
세션 중단: ^b d
세션 다시시작: tmux attach (-t session id or name)
새 윈도우 생성: ^b c
윈도우 이동: ^b b # (이동하고자 하는 번호 입력)</description>
    </item>
    
    <item>
      <title>Python3</title>
      <link>https://duaibeom.github.io/posts/python3/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/python3/</guid>
      <description>PYTHON3 NOTE char.isdigit()
char.isupper()
char.islower()
print(float(&#39;&#39;.join(filter(str.isdigit, x))))
Extract number from a string
SomeStr.endswith((&#39;multiple&#39;, &#39;suffixes&#39;))
  List a = [1,1,2,2,1,1]
a.count(1) &amp;raquo;&amp;gt; 4
  PEP 448 &amp;ndash; Additional Unpacking Generalizations
  * iterable unpacking operator
** dictionary unpacking operators The unary ~ (invert) operator yields the bitwise inversion of its integer argument.
&amp;gt;&amp;gt;&amp;gt; print(*[1], *[2], 3) 1 2 3 &amp;gt;&amp;gt;&amp;gt; dict(**{&amp;#39;x&amp;#39;: 1}, y=2, **{&amp;#39;z&amp;#39;: 3}) {&amp;#39;x&amp;#39;: 1, &amp;#39;y&amp;#39;: 2, &amp;#39;z&amp;#39;: 3} Iteraion &amp;gt;&amp;gt;&amp;gt; for i in a: .</description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>https://duaibeom.github.io/posts/linux/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/linux/</guid>
      <description>Linux Tip Adding Storage  sudo fdisk -l or sudo lshw -C disk sudo fdisk /dev/sd&amp;lt;?&amp;gt; We want to add a new partition. Type &amp;ldquo;n&amp;rdquo; and press enter. 작성중  STD I/O #0 stdin -&amp;gt; PROCESS -&amp;gt; #1 stdout, #2 stderr
stdin: input information. Also, &amp;lt; define possible
stdout: normal output
stderr: error outputIn python, print(&amp;quot;message&amp;quot;, file = sys.stderr) (default: stdout)
program 1&amp;gt; result.txt 2&amp;gt; error.txt pipe run1 | run2 run2 receiving run1&amp;rsquo;s result.</description>
    </item>
    
    <item>
      <title>자기 개발</title>
      <link>https://duaibeom.github.io/posts/mind/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/mind/</guid>
      <description>생산성 떨어뜨리는 시간에 대한 착각 by T Times 스마트폰과 인터넷 때문에 과거보다 집중하기 어려운 환경이 됐고 한 번에 여러 가지 일을 하는 멀티태스킹이 능력인 것처럼 여겨지기 때문이다.
온라인으로 작업하는 경우 일과 휴식 사이 구분이 애매해지면서 업무시간에 스마트폰을 들여다보면서 적장 일할 시간이 없다고 착각하는 것이다.
시간이 모자란다는 착각은 생산성을 떨어뜨릴 수 있다.
&amp;ldquo;시간이 모자란다는 생각에 갇히면 사람들은 바끄고 남들보다 뒤쳐졌다고 느끼며 일의 양에 압도당한다. 업무를 수행할 시간이 똑같이 남았음에도 그런 생각만으로도 생산성을 망친다.</description>
    </item>
    
    <item>
      <title>컴퓨터 하드웨어(Computer Hardware)</title>
      <link>https://duaibeom.github.io/posts/computer_hard/</link>
      <pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/computer_hard/</guid>
      <description>비전공자가 작성한 컴퓨터 기초 SSD  SSD 설명 ~
 연속 읽기쓰기 MB/s
임의 읽기쓰기 IOPS
신뢰시간
NAND flash: Not AND gate를 이용한 flash memory, 연속 읽기쓰기가 빠르다.
NOR flash: Not OR gate를 이용한 flash memory, 임의 읽기쓰기가 빠르다.
TBW(Terabytes Written): SSD 공간에 쓰기 가능한 총량(단위 TB)을 의미한다. TBW가 높으면 많이 파일을 쓰고 지워도 성능이 보장된다. &amp;ndash;&amp;gt; 내구성이 높다.
데이터의 저장 방법: 방(Cell)안의 전자 유무에 따라 0 혹은 1을 의미한다.</description>
    </item>
    
    <item>
      <title>머신 러닝</title>
      <link>https://duaibeom.github.io/posts/machine_learning/</link>
      <pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/machine_learning/</guid>
      <description>How to get weight in keras ? weights = [layer.get_weights() for layer in model.layers] weights and bias is printed.</description>
    </item>
    
    <item>
      <title>Dart</title>
      <link>https://duaibeom.github.io/posts/dart/</link>
      <pubDate>Sat, 11 Nov 1111 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/dart/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go</title>
      <link>https://duaibeom.github.io/posts/golang/</link>
      <pubDate>Sat, 11 Nov 1111 00:00:00 +0000</pubDate>
      
      <guid>https://duaibeom.github.io/posts/golang/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
